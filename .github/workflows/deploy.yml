name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  BACKEND_SERVICE: finplanner-backend
  FRONTEND_SERVICE: finplanner-frontend

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      - name: Build and push backend
        run: |
          docker build -t gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA ./backend
          docker push gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA

      - name: Deploy backend to Cloud Run
        run: |
          gcloud run deploy $BACKEND_SERVICE \
            --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --port 8000 \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 10 \
            --set-env-vars "GOOGLE_CLOUD_PROJECT=$PROJECT_ID" \
            --quiet

      - name: Get backend URL
        id: backend-url
        run: |
          BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE --region=$REGION --format="value(status.url)")
          echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      - name: Get backend URL
        id: backend-url
        run: |
          BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE --region=$REGION --format="value(status.url)")
          echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT

      - name: Build frontend with backend URL
        run: |
          cd frontend
          echo "REACT_APP_API_URL=${{ steps.backend-url.outputs.url }}" > .env.production
          docker build -t gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA .

      - name: Push frontend image
        run: |
          docker push gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA

      - name: Deploy frontend to Cloud Run
        run: |
          gcloud run deploy $FRONTEND_SERVICE \
            --image gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$GITHUB_SHA \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --port 80 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 5 \
            --quiet

      - name: Get frontend URL
        id: frontend-url
        run: |
          FRONTEND_URL=$(gcloud run services describe $FRONTEND_SERVICE --region=$REGION --format="value(status.url)")
          echo "url=$FRONTEND_URL" >> $GITHUB_OUTPUT

      - name: Deployment complete
        run: |
          echo "âœ… Deployment completed successfully!"
          echo "ðŸ”— Frontend: ${{ steps.frontend-url.outputs.url }}"
          echo "ðŸ”— Backend: ${{ steps.backend-url.outputs.url }}"